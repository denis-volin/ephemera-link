name: Release

on:
  push:
    tags:
      - "v*.*.*"

env:
  REGISTRY: dvolin/ephemera-link
  GO_VERSION: 1.23.0

jobs:
  # build-and-push-docker-image:
  #   name: Build and push Docker image
  #   runs-on: ubuntu-latest
  #
  #   permissions:
  #     contents: read
  #     packages: write
  #     attestations: write
  #     id-token: write
  #
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #
  #     - name: Setup QEMU
  #       uses: docker/setup-qemu-action@v3
  #       with:
  #         platforms: linux/amd64,linux/arm64
  #
  #     - name: Setup Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_TOKEN }}
  #
  #     - name: Extract version from tag
  #       run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
  #
  #     - name: Build and push multi-platform image
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: .
  #         push: true
  #         platforms: linux/amd64,linux/arm64
  #         tags: |
  #           ${{ env.REGISTRY }}:${{ env.VERSION }}
  #           ${{ env.REGISTRY }}:latest

  build-go-binaries:
    name: Build Go binaries
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Build for Linux AMD64
        run: |
          GOOS=linux GOARCH=amd64 go build -o "bin/ephemera-link-${{ env.VERSION }}-linux-amd64" .
      - name: Build for Linux ARM64
        run: |
          GOOS=linux GOARCH=arm64 go build -o "bin/ephemera-link-${{ env.VERSION }}-linux-arm64" .

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            bin/ephemera-link-${{ env.VERSION }}-linux-amd64
            bin/ephemera-link-${{ env.VERSION }}-linux-arm64
