name: Release

on:
  push:
    tags:
      - "v*.*.*"

env:
  REGISTRY: dvolin/ephemera-link
  GO_VERSION: 1.23.0

jobs:
  build-and-push-docker-image:
    name: Build and push Docker image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Build and push multi-platform image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}:${{ env.VERSION }}
            ${{ env.REGISTRY }}:latest

  build-go-binaries:
    name: Build Go binaries
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Extract version from tag
        run: |
          echo "AMD64_NAME=ephemera-link-${GITHUB_REF#refs/tags/v}-linux-amd64" >> $GITHUB_ENV
          echo "ARM64_NAME=ephemera-link-${GITHUB_REF#refs/tags/v}-linux-arm64" >> $GITHUB_ENV

      - name: Build and package for Linux AMD64
        run: |
          GOOS=linux GOARCH=amd64 go build -o "bin/${{ env.AMD64_NAME }}" .
          mkdir -vp ${{ env.AMD64_NAME }}
          cp -vr LICENSE README.md templates static locales ${{ env.AMD64_NAME }}/
          cp -v bin/${{ env.AMD64_NAME }} ${{ env.AMD64_NAME }}/ephemera-link
          tar -czvf ${{ env.AMD64_NAME }}.tar.gz ${{ env.AMD64_NAME }}
          zip -r ${{ env.AMD64_NAME }}.zip ${{ env.AMD64_NAME }}

      - name: Build and package for Linux ARM64
        run: |
          GOOS=linux GOARCH=arm64 go build -o "bin/${{ env.ARM64_NAME }}" .
          mkdir -vp ${{ env.ARM64_NAME }}
          cp -vr LICENSE README.md templates static locales ${{ env.ARM64_NAME }}/
          cp -v bin/${{ env.ARM64_NAME }} ${{ env.ARM64_NAME }}/ephemera-link
          tar -czvf ${{ env.ARM64_NAME }}.tar.gz ${{ env.ARM64_NAME }}
          zip -r ${{ env.ARM64_NAME }}.zip ${{ env.ARM64_NAME }}

      - name: Prepare release archives
        run: |

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.AMD64_NAME }}.tar.gz
            ${{ env.AMD64_NAME }}.zip
            ${{ env.ARM64_NAME }}.tar.gz
            ${{ env.ARM64_NAME }}.zip
